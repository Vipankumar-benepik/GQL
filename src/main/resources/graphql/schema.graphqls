type Student {
    id: ID!
    name: String!
    email: String!
}

input StudentInput {
    name: String!
    email: String!
}

input ChecksumInputRequest {
    checksum: String!
}

type Query {
    getAllStudents: [Student]
    getStudentById(id: ID!): Student
}

type Mutation {
    createStudent(name: String!, email: String!): Student
    updateStudent(id: ID!, name: String!, email: String!): Student
    deleteStudent(id: ID!): Boolean
    createMultipleStudentsRecords(students:[StudentInput!]!) : [Student!]
    createStudentWithChecksum(checksum: ChecksumInputRequest!): Student
}

type Subscription {
    studentCreated: Student
}